{"ast":null,"code":"var _jsxFileName = \"/home/skyrunner/React-tut/todos-list/src/MyComponents/AddTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTodo(props) {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (!title || !desc) {\n      alert(\"Title or description cannot be blank\");\n    }\n\n    props.addTodo(title, desc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          className: \"form-label\",\n          children: \"Todo Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          className: \"form-control\",\n          id: \"title\",\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          className: \"form-label\",\n          children: \"Todo Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: desc,\n          onChange: e => {\n            setDesc(e.target.value);\n          },\n          className: \"form-control\",\n          id: \"desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-sm btn-success\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTodo, \"cMWzA7RToOkwO5n6VR2icO/rwsU=\");\n\n_c = AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/skyrunner/React-tut/todos-list/src/MyComponents/AddTodo.js"],"names":["React","useState","AddTodo","props","title","setTitle","desc","setDesc","submit","e","preventDefault","alert","addTodo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,MAAM,GAAIC,CAAD,IAAK;AAChBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG,CAACN,KAAD,IAAU,CAACE,IAAd,EAAmB;AACjBK,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACD;;AACDR,IAAAA,KAAK,CAACS,OAAN,CAAcR,KAAd,EAAoBE,IAApB;AACH,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEE;AAAM,MAAA,QAAQ,EAAEE,MAAhB;AAAA,8BACN;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,OAAf;AAAuB,UAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEJ,KAA1B;AAAiC,UAAA,QAAQ,EAAGK,CAAD,IAAK;AAACJ,YAAAA,QAAQ,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAAR;AAAyB,WAA1E;AAA4E,UAAA,SAAS,EAAC,cAAtF;AAAqG,UAAA,EAAE,EAAC,OAAxG;AAAgH,8BAAiB;AAAjI;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAKN;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAER,IAA1B;AAAgC,UAAA,QAAQ,EAAGG,CAAD,IAAK;AAACF,YAAAA,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AAAwB,WAAxE;AAA0E,UAAA,SAAS,EAAC,cAApF;AAAmG,UAAA,EAAE,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cALM,eASN;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATM;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3BuBZ,O;;KAAAA,O","sourcesContent":["import React, {useState} from 'react';\n\nexport default function AddTodo(props) {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  \n  const submit = (e)=>{\n      e.preventDefault();\n      if(!title || !desc){\n        alert(\"Title or description cannot be blank\");\n      }\n      props.addTodo(title,desc);\n  }\n  return (\n    <div className=\"container\">\n    <h3>Add a ToDo</h3>\n      <form onSubmit={submit}>\n<div className=\"mb-3\">\n<label htmlFor=\"title\" className=\"form-label\">Todo Title</label>\n<input type=\"text\" value={title} onChange={(e)=>{setTitle(e.target.value)}} className=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\"/>\n</div>\n<div className=\"mb-3\">\n<label htmlFor=\"desc\" className=\"form-label\">Todo Description</label>\n<input type=\"text\" value={desc} onChange={(e)=>{setDesc(e.target.value)}} className=\"form-control\" id=\"desc\"/>\n</div>\n<button type=\"submit\" className=\"btn btn-sm btn-success\">Add Todo</button>\n</form>\n  </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}